{"version":3,"file":"static/js/252.a07b97a2.chunk.js","mappings":"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","sources":["components/Toast.js","constants/endpoints.js","schema/userRegistration.schema.js","screens/Register.jsx","hooks/mutations/useCreateUser.js","config/axiosConfig.js","services/response.js","services/api.js","../node_modules/@chakra-ui/layout/dist/chunk-5FO2ZLZM.mjs","../node_modules/@chakra-ui/layout/dist/chunk-QJDVAY5Z.mjs"],"sourcesContent":["import { toast } from 'react-toastify';\n\nconst options = {\n  autoClose: 2000,\n  className: '',\n  position: toast.POSITION.TOP_RIGHT\n};\n\nexport const toastSuccess = message => {\n  toast.success(message, options);\n};\n\nexport const toastError = message => {\n  toast.error(message, options);\n};\n\nexport const toastWarning = message => {\n  toast.warn(message, options);\n};\n\nexport const toastInformation = message => {\n  toast.info(message, options);\n};\n\nexport const toastDark = message => {\n  toast.dark(message, options);\n};\n\nexport const toastDefault = message => {\n  toast(message, options);\n};\n","export default Object.freeze({\n  LOGIN: `/api/login`,\n  CREATE_USER: '/api/register',\n  CREATE_BUSINESS: '/api/business/register',\n  PROFILE: `/api/profile`,\n  USERS: `/api/masteradmin/users`,\n  LOCATION: (id) => `/api/locations/${id}`,\n  MASTER_LOCATIONS: `/api/admin/locations`,\n  CREATE_LOCATION_BY_MASTER_ADMIN: `/api/masteradmin/locations`,\n  MY_LOCATION: `/api/profile/locations`,\n  APPROVE_LOCATION: (id) => `/api/locations/${id}/approve`,\n  ADD_REVIEW: (id) => `/api/locations/${id}/reviews`,\n  APPROVE_REVIEW: (id) => `/api/locations/${id}/reviews/approveReview`,\n  ADD_REPLY: (id) => `/api/locations/${id}/reviews/addComment`,\n  APPROVE_REPLY: (id) => `/api/locations/${id}/comments/approveReply`,\n});\n","import * as Yup from 'yup';\n\nconst RegistrationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .label('Firstname')\n    .required('Firstname should not be empty')\n    .min(2, 'Must have at least 2 characters'),\n  lastName: Yup.string()\n    .label('Lastname')\n    .required('Lastname should not be empty')\n    .min(2, 'Must have at least 2 characters'),\n  email: Yup.string('Enter your email').required('Email is required').email('Email is invalid'),\n  password: Yup.string()\n    .label('Password')\n    .required('Password should not be empty')\n    .min(8, ({ min }) => ` ${min} Characters or longer`),\n  confirmPassword: Yup.string()\n    .label('Confirm Password')\n    .required('Confirm your password')\n    .oneOf([Yup.ref('password')], 'Passwords does not match'),\n});\n\nexport default RegistrationSchema;\n","import React from 'react';\nimport { Flex, SimpleGrid, VStack } from '@chakra-ui/react';\nimport { Button, Input, Link, Typography } from 'components';\nimport { useFormik } from 'formik';\nimport RegistrationSchema from 'schema/userRegistration.schema';\nimport useCreateUser from 'hooks/mutations/useCreateUser';\nimport { useNavigate } from 'react-router-dom';\nimport { getPreviousRoute, removePreviousRoute } from 'utils/auth';\n\nfunction Register() {\n  const navigate = useNavigate();\n  const { createUser, createUserState } = useCreateUser();\n  const previousRoute = getPreviousRoute();\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema: RegistrationSchema,\n    onSubmit: (payload) => {\n      createUser(payload, (data) => {\n        if (previousRoute) {\n          navigate(previousRoute);\n          removePreviousRoute();\n        } else {\n          if (data.data.user.Role === 'master_admin') {\n            navigate('/dashboard');\n          } else if (data.data.user.Role === 'admin') {\n            navigate('/my-listings');\n          } else {\n            navigate('/');\n          }\n        }\n      });\n    },\n  });\n\n  return (\n    <Flex\n      height=\"100%\"\n      width=\"100%\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      bg=\"gray.200\"\n      p=\"20px\"\n    >\n      <Flex\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        bg=\"white\"\n        py=\"60px\"\n        px={{ base: '30px', sm: '40px', md: '60px' }}\n        maxWidth=\"600px\"\n        width=\"100%\"\n        borderRadius=\"24px\"\n      >\n        <Typography textStyle=\"7\" fontWeight={700} mb={{ base: '30px', sm: '40px', md: '60px' }}>\n          Create an Account\n        </Typography>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            formik.handleSubmit(e);\n          }}\n          id=\"user-registration-form\"\n          style={{ width: '100%' }}\n        >\n          <VStack spacing={'20px'} width=\"100%\">\n            <SimpleGrid columns={{ base: 1, sm: 2 }} spacing={'20px'}>\n              <Input\n                id=\"firstName\"\n                name=\"firstName\"\n                variant=\"outline\"\n                placeholder=\"First Name\"\n                value={formik.values.firstName}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                isInvalid={formik.touched.firstName && Boolean(formik.errors.firstName)}\n                errorMsg={formik.errors.firstName}\n              />\n              <Input\n                id=\"lastName\"\n                name=\"lastName\"\n                variant=\"outline\"\n                placeholder=\"Last Name\"\n                value={formik.values.lastName}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                isInvalid={formik.touched.lastName && Boolean(formik.errors.lastName)}\n                errorMsg={formik.errors.lastName}\n              />\n            </SimpleGrid>\n            <SimpleGrid columns={{ base: 1, sm: 2 }} spacing={'20px'}>\n              <Input\n                id=\"email\"\n                name=\"email\"\n                variant=\"outline\"\n                placeholder=\"Email Address\"\n                type=\"email\"\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                isInvalid={formik.touched.email && Boolean(formik.errors.email)}\n                errorMsg={formik.errors.email}\n              />\n              <Input\n                id=\"password\"\n                name=\"password\"\n                variant=\"outline\"\n                placeholder=\"Your Password\"\n                type=\"password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                isInvalid={formik.touched.password && Boolean(formik.errors.password)}\n                errorMsg={formik.errors.password}\n              />\n            </SimpleGrid>\n\n            <Input\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              variant=\"outline\"\n              placeholder=\"Confirm Password\"\n              type=\"password\"\n              value={formik.values.confirmPassword}\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              isInvalid={formik.touched.confirmPassword && Boolean(formik.errors.confirmPassword)}\n              errorMsg={formik.errors.confirmPassword}\n            />\n            <Button\n              width=\"100%\"\n              variant=\"solid\"\n              mode=\"secondary\"\n              type=\"submit\"\n              isDisabled={createUserState.isLoading || Object.keys(formik.errors).length !== 0}\n              isLoading={createUserState.isLoading}\n            >\n              Create Account\n            </Button>\n            <Link fontWeight={500} href=\"/login\">\n              Already A member? Login\n            </Link>\n          </VStack>\n        </form>\n      </Flex>\n    </Flex>\n  );\n}\nexport default Register;\n","import { useMutation } from '@tanstack/react-query';\nimport api from 'services/api';\nimport e from 'constants/endpoints';\nimport { toastError, toastSuccess } from 'components/Toast';\nimport { storeAuthToken } from 'utils/auth';\nimport { useSearchParams } from 'react-router-dom';\n\n/**\n * Endpoint to createUser\n *\n * @param {object} body\n *\n * @returns {Promise<{ message: string }>}\n */\n\nexport default function useCreateUser() {\n  const [searchParams] = useSearchParams();\n  const endpoint = searchParams.get('role') === 'creator' ? e.CREATE_BUSINESS : e.CREATE_USER;\n\n  const createUserRequest = (payload) => api.post(endpoint, payload);\n\n  const { mutate, ...mutationState } = useMutation(createUserRequest);\n\n  const createUser = (payload, onSuccess = () => {}) => {\n    mutate(payload, {\n      onSuccess: (data) => {\n        toastSuccess(data.message);\n        storeAuthToken(data.data.accessToken);\n        onSuccess(data);\n      },\n      onError: (error) => {\n        toastError(error.message);\n      },\n    });\n  };\n\n  return { createUser, createUserState: mutationState };\n}\n","import axios from 'axios';\nimport Nprogress from 'nprogress';\nimport { getAuthToken, removeAuthToken } from 'utils/auth';\n\n// create a new axios instance\nexport const instance = axios.create({\n  // eslint-disable-next-line no-undef\n  baseURL: process.env.REACT_APP_API_URL,\n});\n\ninstance.interceptors.request.use((config) => {\n  const token = getAuthToken();\n\n  // eslint-disable-next-line no-prototype-builtins\n  if (token && !config.headers.hasOwnProperty('Authorization')) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n});\n\ninstance.interceptors.request.use((config) => {\n  Nprogress.start();\n\n  return config;\n});\n\ninstance.interceptors.response.use(\n  function (response) {\n    Nprogress.done();\n    return response;\n  },\n  function (error) {\n    Nprogress.done();\n    if (!error.response || !error.response.data || !error.response.data.message) {\n      error = {\n        response: {\n          data: {\n            message: 'Unable to complete request',\n          },\n        },\n      };\n    } else if (401 === error.response.status) {\n      error = {\n        response: {\n          data: error.response.data,\n        },\n      };\n      removeAuthToken();\n    } else if (404 === error.response.status) {\n      error = {\n        response: {\n          data: error.response.data,\n        },\n      };\n    } else if (500 === error.response.status) {\n      error = {\n        response: {\n          data: {\n            message: 'Ooops! an error occurred',\n          },\n        },\n      };\n    } else {\n      return Promise.reject(error);\n    }\n    throw error;\n  }\n);\n","export function handleResponse(response) {\n  if (response.results) {\n    return Promise.resolve(response.results);\n  }\n\n  if (response.data) {\n    return Promise.resolve(response.data);\n  }\n\n  return Promise.resolve(response);\n}\n\nconst handleErrorResponse = (response) => {\n  const {\n    data: { message, errors },\n  } = response;\n\n  if (message === \"Invalid Data\") {\n    throw new Error(errors[0].message);\n  }\n\n  throw new Error(message);\n};\n\nexport const handleRequestResponse = async (callback) => {\n  try {\n    const response = await callback();\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      if (error.response.status === 401) {\n        window.location.replace(\"/login\");\n      }\n      throw handleErrorResponse(error.response);\n    }\n    throw error;\n  }\n};\n\nexport function handleError(error) {\n  if (error.data) {\n    return Promise.reject(error.data);\n  }\n\n  if (error.response.data) {\n    return Promise.reject(error.response.data);\n  }\n  return Promise.reject(error);\n}\n","import { instance as axios } from 'config/axiosConfig';\nimport { handleResponse, handleError } from './response';\n\n/** @param {string} resource */\nconst get = resource => {\n  return axios.get(resource).then(handleResponse).catch(handleError);\n};\n\n/** @param {string} resource */\n/** @param {object} model */\n/** @param {object} options */\nconst post = (resource, model, options) => {\n  return axios.post(resource, model, options).then(handleResponse).catch(handleError);\n};\n\n/** @param {string} resource */\n/** @param {object} model */\nconst put = (resource, model) => {\n  return axios.put(resource, model).then(handleResponse).catch(handleError);\n};\n\n/** @param {string} resource */\n/** @param {object} model */\nconst patch = (resource, model) => {\n  return axios.patch(resource, model).then(handleResponse).catch(handleError);\n};\n\n/** @param {string} resource */\n/** @param {string} id */\nconst remove = (resource, id) => {\n  return axios.delete(resource, id).then(handleResponse).catch(handleError);\n};\n\nconst exportedObject = {\n  get,\n  post,\n  put,\n  patch,\n  remove\n};\n\nexport default exportedObject;\n","// src/grid.tsx\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Grid = forwardRef(function Grid2(props, ref) {\n  const {\n    templateAreas,\n    gap,\n    rowGap,\n    columnGap,\n    column,\n    row,\n    autoFlow,\n    autoRows,\n    templateRows,\n    autoColumns,\n    templateColumns,\n    ...rest\n  } = props;\n  const styles = {\n    display: \"grid\",\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /* @__PURE__ */ jsx(chakra.div, { ref, __css: styles, ...rest });\n});\nGrid.displayName = \"Grid\";\n\nexport {\n  Grid\n};\n","import {\n  Grid\n} from \"./chunk-5FO2ZLZM.mjs\";\n\n// src/simple-grid.tsx\nimport {\n  forwardRef,\n  getToken,\n  useTheme\n} from \"@chakra-ui/system\";\nimport { mapResponsive } from \"@chakra-ui/breakpoint-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar SimpleGrid = forwardRef(\n  function SimpleGrid2(props, ref) {\n    const { columns, spacingX, spacingY, spacing, minChildWidth, ...rest } = props;\n    const theme = useTheme();\n    const templateColumns = minChildWidth ? widthToColumns(minChildWidth, theme) : countToColumns(columns);\n    return /* @__PURE__ */ jsx(\n      Grid,\n      {\n        ref,\n        gap: spacing,\n        columnGap: spacingX,\n        rowGap: spacingY,\n        templateColumns,\n        ...rest\n      }\n    );\n  }\n);\nSimpleGrid.displayName = \"SimpleGrid\";\nfunction toPx(n) {\n  return typeof n === \"number\" ? `${n}px` : n;\n}\nfunction widthToColumns(width, theme) {\n  return mapResponsive(width, (value) => {\n    const _value = getToken(\"sizes\", value, toPx(value))(theme);\n    return value === null ? null : `repeat(auto-fit, minmax(${_value}, 1fr))`;\n  });\n}\nfunction countToColumns(count) {\n  return mapResponsive(\n    count,\n    (value) => value === null ? null : `repeat(${value}, minmax(0, 1fr))`\n  );\n}\n\nexport {\n  SimpleGrid\n};\n"],"names":["options","autoClose","className","position","toast","toastSuccess","message","toastError","Object","freeze","LOGIN","CREATE_USER","CREATE_BUSINESS","PROFILE","USERS","LOCATION","id","MASTER_LOCATIONS","CREATE_LOCATION_BY_MASTER_ADMIN","MY_LOCATION","APPROVE_LOCATION","ADD_REVIEW","APPROVE_REVIEW","ADD_REPLY","APPROVE_REPLY","Yup","shape","firstName","label","required","min","lastName","email","password","confirmPassword","oneOf","navigate","useNavigate","useSearchParams","endpoint","get","e","useMutation","payload","api","mutate","createUser","onSuccess","data","storeAuthToken","accessToken","onError","error","createUserState","useCreateUser","previousRoute","getPreviousRoute","formik","useFormik","initialValues","validationSchema","RegistrationSchema","onSubmit","removePreviousRoute","user","Role","height","width","alignItems","justifyContent","bg","p","flexDirection","py","px","base","sm","md","maxWidth","borderRadius","textStyle","fontWeight","mb","preventDefault","handleSubmit","style","spacing","columns","name","variant","placeholder","value","values","onChange","handleChange","onBlur","handleBlur","isInvalid","touched","Boolean","errors","errorMsg","type","mode","isDisabled","isLoading","keys","length","href","instance","axios","baseURL","process","handleResponse","response","results","Promise","resolve","interceptors","request","use","config","token","getAuthToken","headers","hasOwnProperty","Authorization","Nprogress","status","removeAuthToken","reject","handleError","resource","then","catch","post","model","put","patch","remove","Grid","forwardRef","props","ref","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","jsx","chakra","__css","displayName","SimpleGrid","count","spacingX","spacingY","minChildWidth","theme","useTheme","mapResponsive","n","_value","getToken","widthToColumns"],"sourceRoot":""}